;=>Mysql DATA TYPES( VErsion V8)

*String Data Types
Data Type                             Description
1.CHAR(size)                          A FIXED Length string (can contain  
                                      letters,numbers,and special characters).can  be from 0 to 255
2.VARCHAR(size)                       A variable length string (can contain  
                                      letters,numbers,and special characters).can  be from 0 to 65535
3.TEXT(size)                         can  be from 256 to 65535  (65 Kb)       
4.TINYTEXT                           can  be from 1 to  255   (255 Bytes)
5.MEDIUMTEXT                         can  be from 256 to  16777215 characters (16 MB)
6.LONGTEXT                           can  be from 16777216 to  4294967295 characters (4 GB)

7.BINARY(size)                       Equal to CHAR()
8.VARBINARY(size)                    Equal to VARCHAR()
9.BLOB(size)                         FOR BLOBS can  be from 256 to 65535  (65 Kb)  
10.TINYBLOG                          FOR BLOBS can  be from 1 to  255   (255 Bytes)
11.MEDIUMBLOB                        FOR BLOBS can  be from 256 to  16777215 characters (16MB)
12.LONGBLOB                          FOR BLOBS can  be from 16777216 to  4294967295 characters (4 GB)
 
13.ENUM('value1','value2','value3',...)  A string object can have one value, must be possible value, 65535  (65kb)
14.SET('value1','value2','value3',...)   A string object that chan have 0 or more value

_________________________________________


Difference between CHAR(size) and VARCHAR(size) accept
Fixed length DataType                 Variable length DataType
Static DataType                       Dynamic DataType
char,num,special characters           char,num,special characters
non_unicode 1char = 1byte(8bit)       non_unicode 1char = 1byte(8bit)
more spacing than VARCHAR             have extra byte(1bit)
more faster than VARCHAR
have 5byte and calculate 5byte


=>About CHAR
*CHAR is faster than VARCHAR
*Static DataType
*eg: Telephone numbers, Zip Code
*eg: Yes/No Flags :Y/N
*eg: Sex : Male/Female Flags: M/F

CHAR                                   VS                                VARCHAR
Value           CHAR(4)        Storage          VARCHAR(4)         Storage
''              '    '         4bytes           ''                 1byte
'ab'            'ab'           4bytes           'ab '              3bytes
'abc'           'abc'          4bytes           'abc '             4bytes
'abcd'          'abcd'         4bytes           'abcd '            5bytes
'abcdefg'       error          4bytes           error              8bytes

___________________________________

CREATE TABLE contacts(
       name CHAR(5)
);

DESC contacts;

INSERT INTO contacts(name)
VALUEs ('ko');

INSERT INTO contacts(name)
VALUES ('ko ko');

INSERT INTO contacts(name)
VALUES ('Hello');

*error
INSERT INTO contacts(name)
VALUES ('hay now');

*error
INSERT INTO contacts(name)
VALUES ('now hay');

INSERT INTO contacts(name)
VALUES ('aung'),
        ('maung'),
        ('ko');

 DROP TABLE contacts;

 CREATE TABLE contacts(
      name VARCHAR(5)
 );

 DESC contacts;

INSERT INTO contacts(name)
VALUEs ('ko');

INSERT INTO contacts(name)
VALUES ('ko ko');

INSERT INTO contacts(name)
VALUES ('Hello');

*error
INSERT INTO contacts(name)
VALUES ('hay now');

*error
INSERT INTO contacts(name)
VALUES ('now hay');

INSERT INTO contacts(name)
VALUES ('aung'),
       ('maung'),
       ('ko');

_____________________________________

 =>CHAR() / VARCHAR() VS TEXT

 CREATE TABLE mytests(
      id INT DEFAULT 10,
      name VARCHAR(50)
 );

 DESC mytests;

 INSERT INTO mytests(name)
 VALUES ('aung aung');

 SELECT * FROM mytests;

 DROP TABLE mytests;

 CREATE TABLE mytests(
       id INT DEFAULT 10,
       name TEXT(50)=>Describe as a Tinytext
 );

 DESC mytests;

 INSERT INTO mytests(name) VALUES('aung aung');

 INSERT INTO mytests(id) VALUES(10);

 SELECT * FROM mytests;

 DROP TABLE mytests;

*error (BLOB,TEXT,GEOMETRY or JSON cant't have a DEFAULT name)
CREATE TABLE mytests(
       id INT,
       name TEXT(50) DEFAULT "hay now"
 );

_____________________________________

=>VARIABLES

SHOW VARIABLES;

SHOW CHARACTER SET;

*utf8_general_ci (ci is case insensitive) maxlength 3 is mean 3bytes per character.

*SHOW CHARACTER SET = for a single Database
Method 1
*check charset
SHOW VARIABLES LIKE 'character_set_database';
*check collaction
SHOW VARIABLES LIKE 'collation_database';

Methood 2 (System Variables)
USE wdf4029;
SELECT @@character_set_database;

USE wdf4029;
SELECT @@collation_database;

Method 3
SELECT DEFAULT_CHARACTER_SET_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'wdf4029';

SELECT DEFAULT_COLLATION_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "wdf4029";

SELECT DEFAULT_CHARACTER_SET_NAME , DEFAULT_COLLATION_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = "wdf4029";

SHOW CHARACTER SET = for ALL Database
SHOW DATABASES;
SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT SCHEMA_NAME 'databases' FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_CHARACTER_SET_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_CHARACTER_SET_NAME 'charset' FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_COLLATION_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_COLLATION_NAME 'collation' FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT SCHEMA_NAME 'All Databases' , DEFAULT_CHARACTER_SET_NAME 'charset' , DEFAULT_COLLATION_NAME 'collation" FROM INFORMATION_SCHEMA.SCHEMATA;

*SHOW CHARACTER SET = for a single table
SHOW FULL COLUMNS FROM tablename;
SHOW CREATE  TABLE tablename;
SHOW TABLE STATUS WHERE NAME LIKE 'tablename';

*SHOW CHARACTER SET = for getting the collation from FIELD NAME
SHOW FULL COLUMNS FROM tablename WHERE Field = "fieldname";


CREATE TABLE mytests(
   col1 TINYTEXT,
   col2 TEXT,
   col3 MEDIUMTEXT,
   col4 LONGTEXT
);

DESC mytests;

DROP TABLE mytests;


CREATE TABLE mytests(
   col1 TEXT
   col2 TEXT(0),
   col3 TEXT(5)
);

DESC mytests;

INSERT INTO mytests(col1,col2,col3)
VALUES ('aung aung','maung maung','aung kyaw kyaw');

SELECT * FROM mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
     col1 TEXT(255), -- 1-255 tinytext
     col2  TEXT(65535), -- 256-65535 text,
     col3 TEXT(16777215), -- 65536-16777215 mediumtext,
     col4 TEXT(4294967295) -- 16777216-4294967295 longtext
 ) ENGINE=InnoDB  CHARSET=latin1;

 DESC mytests;

 DROP TABLE mytests;

 
CREATE TABLE mytests(
     col1 TEXT(255), -- 1-255
     col2  TEXT(65535), -- 256-65535,=
     col3 TEXT(16777215), -- 65536-16777215
     col4 TEXT(4294967295) -- 16777216-4294967295
 ) ENGINE=InnoDB  CHARSET=latin2;

 SHOW FULL COLUMNS FROM mytests;

 SHOW TABLE STATUS WHERE NAME LIKE 'mytests';

 SHOW CREATE TABLE mytests;

 DROP TABLE mytests;

CREATE TABLE mytests(
     col1 TEXT(255), -- 1-255
     col2  TEXT(65535), -- 256-65535,=
     col3 TEXT(16777215), -- 65536-16777215
     col4 TEXT(4294967295) -- 16777216-4294967295
 ) ENGINE=InnoDB  CHARSET=utf8;


DESC mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
     col1 TEXT(255), -- 1-85 / 3 tinytext
     col2  TEXT(65535), -- 86-21845 / 3 text
     col3 TEXT(16777215), -- 21846-5592405 / 3 mediumtext
     col4 TEXT(4294967295) -- 5592406-4294967295 / 3 longtext

 ) ENGINE=InnoDB  CHARSET=utf8;


DESC mytests;

SHOW TABLE STATUS WHERE NAME LIKE 'mytests';

SHOW CREATE TABLE mytests;

DROP TABLE mytests;

_____________________________________

=>Example char and binary

CREATE TABLE mytests(
    col1 CHAR,
    col2 CHAR(255)
);

DESC mytests;

DROP TABLE mytests;

*error in 256
CREATE TABLE mytests(
    col1 CHAR,
    col2 CHAR(256)
);


CREATE TABLE mytests(
        col1 BINARY,
        col2 BINARY(255)
);

DESC mytests;

DROP TABLE mytests;

*error in 256
CREATE TABLE mytests(
    col1 BINARY,
    col2 BINARY(256)
);

CREATE TABLE mytests(
    col1 BINARY(30)
);

DESC mytests;

INSERT INTO mytests (col1)  VALUE ('Kyaw Kyaw Aung');

SELECT * FROM mytests;

_____________________________________

ENUM (enumeration)

CREATE TABLE motos(
       id INT PRIMARY KEY AUTO_INCREMENT,
       name VARCHAR(50),
       gender ENUM('M','F','Other') NOT NULL
);

DESC motos;

INSERT INTO motos (name,gender)
VALUES ('aung aung','M');

SELECT * FROM motos;

*error
INSERT INTO motos (name,gender)
VALUES ('aung aung','K');

INSERT INTO motos (name,gender)
VALUES ('hla hla,'f');


INSERT INTO motos (name,gender)
VALUES ('hla hla,'f');
INSERT INTO motos (name,gender)
VALUES ('mya mya','other');
INSERT INTO motos (name,gender)
VALUES ('mya mya',1);
INSERT INTO motos (name,gender)
VALUES ('mya mya',2);
INSERT INTO motos (name,gender)
VALUES ('mya mya',3);
INSERT INTO motos (name,gender)
VALUES ('mya mya','1');
INSERT INTO motos (name,gender)
VALUES ('mya mya','2');
INSERT INTO motos (name,gender)
VALUES ('mya mya','3');

*error
INSERT INTO motos (name,gender)
VALUES('mya mya',4);
INSERT INTO motos (name,gender)
VALUES('mya mya','m,f');


=>SET

CREATE TABLE motas(
       id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
       name VARCHAR(50),
       role SET('C','R','U','D') NOT NULL
);

DESC motas;

INSERT INTO motas (name,role)
VALUES ('aung aung','C');
INSERT INTO motas (name,role)
VALUES ('su su','d');
INSERT INTO motas (name,role)
VALUES ('nu nu','c,r');
INSERT INTO motas (name,role)
VALUES ('nu nu','c,r,d');
INSERT INTO motas (name,role)
VALUES ('nu nu','c,r,d,u');

*result = c,r,u,d
INSERT INTO motas(name,role)
VALUE ('nu nu','c,r,d,u,c');


*error
INSERT INTO motas (name,role)
VALUES ('nu nu','1,2');
INSERT INTO motas (name,role)
VALUES ('nu nu',1,2);
INSERT INTO motas (name,role)
VALUES ('nu nu','k');
INSERT INTO motas (name,role)
VALUES ('nu nu','c,k');

SELECT * FROM motas;

_____________________________________


12EN