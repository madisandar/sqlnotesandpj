CREATE TABLE IF NOT EXISTS  tourowners(
     id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
     name VARCHAR(20),
     phone VARCHAR(15) NOT NULL UNIQUE,
     email VARCHAR(50) NOT NULL
);

DESC tourowners;

INSERT INTO tourowners(name,phone,email)
VALUES('thiri','09123456','thiris613@gmail.com');


SELECT * FROM tourowners;

CREATE TABLE IF NOT EXISTS visitors(
        id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(20) NOT NULL,
        gender ENUM('M','F') NOT NULL,
        dob DATE NOT NULL,
        email VARCHAR(50) NOT NULL UNIQUE,
        password VARCHAR(255) NOT NULL,
        status INT DEFAULT 1,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DESC visitors;

INSERT INTO visitors(name,gender,dob,email,password)
VALUES('aung aung',1,'2022-1-1','aungaung@gmail.com',MD5(SHA1('12345'))),
('su su',2,'2022-3-14','susu@gmail.com',MD5(SHA1('12345'))),
('zaw zaw',1,'2022-2-6','zawzaw@gmail.com',MD5(SHA1('12345')));


SELECT * FROM visitors;


CREATE TABLE IF NOT EXISTS visitorinfos(
        id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        profile VARCHAR(50),
        nrcnumber VARCHAR(100) NOT NULL UNIQUE,
        age INT NOT NULL CHECK(age >= 18),
        phone VARCHAR(20) NOT NULL UNIQUE,
        visitor_id INT,
        citizen_id INT,
        FOREIGN KEY(visitor_id) REFERENCES visitors(id) ON UPDATE CASCADE ON DELETE CASCADE,
        FOREIGN KEY(citizen_id) REFERENCES citizens(id)
);

DESC visitorinfos;

INSERT INTO visitorinfos(age,nrcnumber,phone,visitor_id,citizen_id)
VALUES(20,'10/MaLaMa(N)123456',0912345,1,1),
(25,'10/MaLaMa(N)456789',0912346,2,2);

SELECT * FROM visitorinfos;

CREATE TABLE IF NOT EXISTS citizens(
        id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        country VARCHAR(50) NOT NULL,
        city VARCHAR(50),
        language SET('eng','thai','myan','indo') NOT NULL,
        visitorinfo_id INT,
        FOREIGN KEY(visitorinfo_id) REFERENCES visitors(id)
);


DESC citizens;

INSERT INTO citizens(country,city,language,visitorinfo_id)
VALUES('thailand','bangkok','eng,thai',2),
('myanmar','mandalay','eng,myan',3);

SELECT * FROM citizens;

CREATE TABLE IF NOT EXISTS places(
        id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
        placename VARCHAR(50) UNIQUE,
        placetype VARCHAR(20),
        startdate DATE NOT NULL,
        starttime TIME,
        endtime TIME,
        endate DATE NOT NULL,
        visitor_id INT,
        FOREIGN KEY(visitor_id) REFERENCES visitors(id) ON UPDATE CASCADE ON DELETE CASCADE
);

DESC places;

INSERT INTO places(placename,startdate,starttime,endtime,visitor_id)
VALUES('chaung tha','2022-4-1','09:00:00','12:00:00',1),
('ocean','2022-3-1','04:00:00','8:00:00',3),
('maharmuni','2022-4-1','03:00:00','06:00:00',1);

SELECT * FROM places;

CREATE TABLE appointments(
       id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
       created_at TIMESTAMP DEFAULT NOW(),
       updated_at TIMESTAMP DEFAULT NOW() ON UPDATE CURRENT_TIMESTAMP,
       visitor_id INT,
       place_id INT,
       FOREIGN KEY(visitor_id) REFERENCES visitors(id) ON UPDATE CASCADE ON DELETE CASCADE,
       FOREIGN KEY(place_id) REFERENCES places(id)

);

DESC appointments;

INSERT INTO appointments(visitor_id,place_id)
VALUES(1,1),
(3,2);

SELECT * FROM appointments;


CREATE TABLE IF NOT EXISTS enrollments(
       id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
       paymentmethod ENUM('MPU','VISA','COD') NOT NULL DEFAULT 'MPU',
       currency VARCHAR(20) NOT  NULL,
       fee DECIMAL(10,2) NOT NULL,
       status INT DEFAULT 1,
       created_at TIMESTAMP DEFAULT NOW(),
       updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
       appointment_id INT,
       FOREIGN KEY(appointment_id) REFERENCES appointments(id) ON UPDATE CASCADE ON DELETE CASCADE

);

DESC enrollments;

INSERT INTO enrollments(paymentmethod,currency,fee,appointment_id)
VALUES('MPU','bhat',10000,1),
('COD','burmese',2000,2);

SELECT * FROM enrollments;


CREATE TABLE IF NOT EXISTS reviews(
   id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
   rating INT NOT NULL CHECK(rating <= 5),
   remark VARCHAR(50),
   created_at TIMESTAMP DEFAULT NOW(),
   updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
   visitor_id INT,
   place_id INT,
   FOREIGN KEY(visitor_id) REFERENCES visitors(id) ON UPDATE CASCADE ON DELETE CASCADE,
   FOREIGN KEY(place_id) REFERENCES places(id) ON DELETE CASCADE
);

DESC reviews;

INSERT INTO reviews(rating,remark,visitor_id,place_id)
VALUES(3,'not bad',1,3),
(5,'awesome',3,2);

SELECT * FROM reviews;
